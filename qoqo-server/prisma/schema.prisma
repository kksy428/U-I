generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  username   String
  phone_num  String       @unique
  email      String       @unique       //user_id
  password   String
  role       String       // "Trainer" | "User"
  gym_name   String
  user_image String       @default("/images/users/default.jpg")
  created_at DateTime     @default(now())
  reservations Reservation[]
  usages      Usage[]
}

model Equipment {
  id          Int          @id @default(autoincrement())
  equip_name  String
  equip_type  String       // 운동기구 종류 (가슴, 등, 하체 등)
  equip_image String       // 운동기구 이미지 URL
  gym_name    String       // 헬스장 이름
  is_active   Boolean      @default(true)
  reservations Reservation[]
  usages      Usage[]
}

model Reservation {
  id              Int               @id @default(autoincrement())
  equipment_id    Int
  user_id         Int
  desired_time    Int               // 희망 운동 시간 (분)
  reserved_time   DateTime          @default(now())
  estimated_start DateTime?         // 예상 시작 시간
  late_policy     String           // "SKIP" | "MOVE_TO_NEXT"
  is_active       Boolean          @default(true)
  status          ReservationStatus @default(WAITING)

  user        User        @relation(fields: [user_id], references: [id], onDelete: Cascade)
  equipment   Equipment   @relation(fields: [equipment_id], references: [id], onDelete: Cascade)
  usage       Usage?      
}

model Usage {
  id             Int           @id @default(autoincrement())
  equipment_id   Int
  user_id        Int
  reservation_id Int?          @unique  
  start_time     DateTime      // 실제 운동 시작 시간
  end_time       DateTime?     // 운동 종료 시간
  is_active      Boolean       @default(true)

  user        User        @relation(fields: [user_id], references: [id], onDelete: Cascade)
  equipment   Equipment   @relation(fields: [equipment_id], references: [id], onDelete: Cascade)
  reservation Reservation? @relation(fields: [reservation_id], references: [id], onDelete: SetNull)

  @@index([user_id, start_time]) // 사용자별 운동 기록 조회 성능 향상
}

enum ReservationStatus {
  WAITING      // 대기 중
  IN_PROGRESS  // 운동 중
  COMPLETED    // 완료됨
  CANCELLED    // 취소됨
  SKIPPED      // 지각으로 인한 건너뜀
}
